#--Vesely: Nobody should forget about proper enrollment and allocation of MGMT-flows! 
#		   I repaired this scenario.
[General]


network = SmallNetRouting
sim-time-limit = 5min
seed-set = ${runnumber}


fingerprint = "803f-685d"

#
# Naming.
#

**.host1.applicationProcess1.apName = "App1"
**.host2.applicationProcess1.apName = "App2"
**.host3.applicationProcess1.apName = "App3"
**.host4.applicationProcess1.apName = "App4"
**.host5.applicationProcess1.apName = "App5"
**.apType 		= "APPing"

#
# Static addressing: lower IPC layer.
#
# Hosts:
#
# Host1 --> Router1
**.host1.ipcProcess0.difName = "Layer01"
**.host1.ipcProcess0.ipcAddress = "1"

# Host2 --> Router1
**.host2.ipcProcess0.difName = "Layer02"
**.host2.ipcProcess0.ipcAddress = "2"

# Host3 --> Router2
**.host3.ipcProcess0.difName = "Layer05"
**.host3.ipcProcess0.ipcAddress = "3"

# Host4 --> Router3
**.host4.ipcProcess0.difName = "Layer06"
**.host4.ipcProcess0.ipcAddress = "4"

# Host5 --> Router3
**.host5.ipcProcess0.difName = "Layer07"
**.host5.ipcProcess0.ipcAddress = "5"

#
# Routers:
#
# Router1 --> Host1
**.router1.ipcProcess0.difName = "Layer01"
**.router1.ipcProcess0.ipcAddress = "6"
# Router1 --> Host2
**.router1.ipcProcess1.difName = "Layer02"
**.router1.ipcProcess1.ipcAddress = "7"
# Router1 --> Router2
**.router1.ipcProcess2.difName = "Layer03"
**.router1.ipcProcess2.ipcAddress = "8"

# Router2 --> Router1
**.router2.ipcProcess0.difName = "Layer03"
**.router2.ipcProcess0.ipcAddress = "9"
# Router2 --> Router3
**.router2.ipcProcess1.difName = "Layer04"
**.router2.ipcProcess1.ipcAddress = "10"
# Router2 --> Host3
**.router2.ipcProcess2.difName = "Layer05"
**.router2.ipcProcess2.ipcAddress = "11"

# Router3 --> Router2
**.router3.ipcProcess0.difName = "Layer04"
**.router3.ipcProcess0.ipcAddress = "12"
# Router3 --> Host4
**.router3.ipcProcess1.difName = "Layer06"
**.router3.ipcProcess1.ipcAddress = "13"
# Router3 --> Host5
**.router3.ipcProcess2.difName = "Layer07"
**.router3.ipcProcess2.ipcAddress = "14"

#
# Higher IPC layer.
#
# Hosts:
#
**.host1.ipcProcess1.ipcAddress = "101"
**.host2.ipcProcess1.ipcAddress = "102"
**.host3.ipcProcess1.ipcAddress = "103"
**.host4.ipcProcess1.ipcAddress = "104"
**.host5.ipcProcess1.ipcAddress = "105"
**.host*.ipcProcess1.difName = "Layer11"

#
# Routers:
#"
**.router1.relayIpc.ipcAddress = "106"
**.router2.relayIpc.ipcAddress = "107"
**.router3.relayIpc.ipcAddress = "108"
**.router*.relayIpc.difName = "Layer11"

#
# Policy selection for the DIF Layer11.
# Such layer will use Distance Vector, while the Shim-DIF layers will use the static one.
#

#
# RMT Forwarding policies
#
**.host*.ipcProcess1.relayAndMux.ForwardingPolicyName = "SimpleTable"
**.router*.relayIpc.relayAndMux.ForwardingPolicyName = "SimpleTable"

#
# forwarding generator policies
#
**.host*.ipcProcess1.resourceAllocator.pdufgPolicyName = "SimpleGenerator"
**.router*.relayIpc.resourceAllocator.pdufgPolicyName = "SimpleGenerator"

#
# Routing policies
#
**.host*.ipcProcess1.routingPolicyName = "SimpleDV"
**.router*.relayIpc.routingPolicyName = "SimpleDV"

#DIF Allocator settings
**.host1.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")
**.host2.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host2']/DA")
**.host3.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host3']/DA")
**.host4.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host4']/DA")
**.host5.difAllocator.configData = xmldoc("config.xml", "Configuration/Host[@id='host5']/DA")

**.router1.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='router1']/DA")
**.router2.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='router2']/DA")
**.router3.difAllocator.configData = xmldoc("config.xml", "Configuration/Router[@id='router3']/DA")

#Directory settings
**.host2.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")
**.host3.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")
**.host4.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")
**.host5.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Host[@id='host1']/DA")

**.router2.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Router[@id='router1']/DA")
**.router3.difAllocator.directory.configData = xmldoc("config.xml", "Configuration/Router[@id='router1']/DA")

#
# QoS Cube sets.
#
**.ra.qoscubesData = xmldoc("qos.xml", "QoSCubesSet")
**.ra.qosReqData = xmldoc("qosreq.xml", "QoSReqSet")

#
# Preallocated flows:
#
**.ra.preallocation = xmldoc("preall.xml", "ConnectionSets/ConnectionSet[@id='all']/")

#
# Enrollment settings:
#
#**.host*.**.enrollment.isSelfEnrolled = true
#**.router*.**.enrollment.isSelfEnrolled = true

#Enrollment setup
**.host2.ipcProcess1.enrollment.configData = xmldoc("config.xml", "Configuration/Host[@id='host2']/Enrollment")
**.host5.ipcProcess1.enrollment.configData = xmldoc("config.xml", "Configuration/Host[@id='host5']/Enrollment")
**.router1.**.enrollment.isSelfEnrolled = true
**.router2.relayIpc.enrollment.configData = xmldoc("config.xml", "Configuration/Router[@id='router2']/Enrollment")
**.router2.ipcProcess*.**.enrollment.isSelfEnrolled = true
**.router3.ipcProcess*.**.enrollment.isSelfEnrolled = true
**.router3.relayIpc.enrollment.configData = xmldoc("config.xml", "Configuration/Router[@id='router3']/Enrollment")

[Config SmallNetRouting]
fingerprint = "a985-a4a9"


**.host1.applicationProcess1.apInst.dstApName	= "App5"
**.host1.applicationProcess1.apInst.startAt 		= 100s
**.host1.applicationProcess1.apInst.stopAt 		= 106s

**.host3.applicationProcess1.apInst.dstApName	= "App2"
**.host3.applicationProcess1.apInst.startAt 		= 102s
**.host3.applicationProcess1.apInst.stopAt 		= 108s

# **.host4.applicationProcess1.applicationEntity.iae.dstApName	= "App1"
# **.host4.applicationProcess1.applicationEntity.iae.dstAeName 	= "Ping"
# **.host4.applicationProcess1.applicationEntity.iae.startAt 		= 104s
# **.host4.applicationProcess1.applicationEntity.iae.pingAt 		= 105s
# **.host4.applicationProcess1.applicationEntity.iae.rate 		= 5
# **.host4.applicationProcess1.applicationEntity.iae.stopAt 		= 110s

